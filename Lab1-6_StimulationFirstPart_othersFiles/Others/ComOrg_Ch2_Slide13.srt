1
00:00:01,438 --> 00:00:04,937
ต่อไปเป็น สไลด์ที่ 13

2
00:00:04,937 --> 00:00:11,213
เราจะให้ความสำคัญกับ "เลขจำนวนเต็มฐานสอง ชนิดมีเครื่องหมาย"

3
00:00:11,213 --> 00:00:16,900
ที่เราเรียกว่า " 2's Complement "

4
00:00:16,900 --> 00:00:30,454
ใช้ใน CPU เกือบ 100 % ทั่วโลก

5
00:00:30,454 --> 00:00:37,021
ความหมายก็คือว่า การที่เราเขียนโปรแกรมภาษา C/C++

6
00:00:37,021 --> 00:00:43,658
เวลาเราประกาศตัวแปร char, short, int

7
00:00:43,658 --> 00:00:53,160
แล้วเราตั้งค่าเริ่มต้นให้กับตัวแปร x y z เท่ากับ - 5

8
00:00:53,160 --> 00:00:57,670
ตัวแปรเหล่านี้ ใช้ความยาวในหน่วยความจำไม่เท่ากัน

9
00:00:57,670 --> 00:01:00,477
เหมือนที่ผมเกริ่นไปแล้ว ตอนต้นว่า

10
00:01:00,477 --> 00:01:07,367
ตัวนี้ใช้ 8 บิต ตัวนี้ใช้ 16 บิต ตัวนี้ใช้ 32 บิต

11
00:01:07,367 --> 00:01:13,462
เรามาดูว่า ในหน่วยความจำจริงๆของเครื่องคอมพิวเตอร์

12
00:01:13,462 --> 00:01:21,036
เมื่อเรา... เอาเลข -5 เข้าไปใส่ มันจะกลายเป็นเลขอะไร

13
00:01:21,036 --> 00:01:28,264
คำตอบก็คือ จะเป็นเลขจำนวนเต็มฐานสอง ชนิด 2's Complement

14
00:01:28,264 --> 00:01:32,622
จะเป็นเลขจำนวนเต็มฐานสอง ชนิด 2's Complement

15
00:01:32,622 --> 00:01:44,468
โดยที่ x จะเท่ากับเลขฐานสองตัวนี้ ก็คือ 11111011 ฐานสอง

16
00:01:44,968 --> 00:01:51,630
บิตนี้ทางซ้ายสุด ทำหน้าที่เป็น Signed bit

17
00:01:51,630 --> 00:01:57,959
เดี๋ยวผมจะอธิบายในสมการที่ 2.15

18
00:01:57,959 --> 00:02:01,170
ของนิยามที่ 2.2.2 นี้

19
00:02:01,170 --> 00:02:03,789
เดี๋ยวเรามาดูตัวอย่างตรงนี้ก่อนว่า

20
00:02:03,789 --> 00:02:14,899
ถ้าเราประกาศเป็นตัวแปรชนิด short มันจะต้องกินพื้นที่ทั้งหมด 16 บิต

21
00:02:14,899 --> 00:02:17,468
เห็นมั้ยครับว่า

22
00:02:17,468 --> 00:02:28,710
แบ่งครึ่ง 8 บิต ของตัวแปร x จะเหมือนกับ 8 บิตขวาของตัวแปร y

23
00:02:29,067 --> 00:02:47,109
8 บิตทางขวา เราเรียกว่า LSB (Least Significant Byte)

24
00:02:47,371 --> 00:02:59,006
ส่วน 8 บิตทางซ้าย เรียกว่า MSB (Most Significant Byte)

25
00:02:59,006 --> 00:03:07,015
เพราะฉนั้น บิตทางซ้ายสุด ก็คือเลขตัวนี้ (1) ทำหน้าที่เป็น Signed bit เหมือนเดิม

26
00:03:07,015 --> 00:03:09,513
ที่เหลือเป็นข้อมูล

27
00:03:09,775 --> 00:03:16,020
เดี๋ยวเรามาดู ตัวแปรชนิดที่ 3 ตัวแปร int

28
00:03:16,020 --> 00:03:18,964
ตัวแปร z = -5 เหมือนกัน

29
00:03:18,964 --> 00:03:29,502
ข้างในก็คือ FFFFFFF ลงท้ายด้วย B ฐาน16

30
00:03:31,215 --> 00:03:40,993
FB ตัวนี้มาจากไหน มันก็คือตัวเลขฐาน 2 ตัวนี้

31
00:03:40,993 --> 00:03:44,063
ตัวนี้ก็คือ FB เหมือนกัน

32
00:03:44,444 --> 00:03:45,827
F มาจากไหน

33
00:03:45,827 --> 00:03:49,562
F ก็คือ 1111 ฐาน 2

34
00:03:49,895 --> 00:03:52,370
มันคือ F ฐาน 16

35
00:03:52,370 --> 00:03:53,347
B มาจากไหน 

36
00:03:53,347 --> 00:03:58,247
B ก็คือ 1011 ฐาน 2

37
00:03:58,247 --> 00:04:01,151
มันคือเท่าไรครับ ฐาน 10...

38
00:04:01,151 --> 00:04:07,194
มันคือ (8 + 2 + 1) = 11 ฐาน 10

39
00:04:07,194 --> 00:04:13,094
แต่เราไม่เขียน 11... เราเขียน B ฐานสิบหก

40
00:04:13,760 --> 00:04:20,521
(Byte) LSB ตรงนี้ก็เหมือนกัน... ก็คือ FB ฐาน16

41
00:04:20,521 --> 00:04:28,157
แล้วเลข 8 ตัวนี้ (ฐาน 2) มันคือ FF

42
00:04:28,157 --> 00:04:30,393
รวมใจความแล้ว

43
00:04:30,393 --> 00:04:37,791
ตัวแปร Y = FFFB ฐาน 16

44
00:04:37,791 --> 00:04:43,716
ตัวแปร X = FB ฐาน 16

45
00:04:43,716 --> 00:04:46,214
เพราะฉนั้น ตัวแปร z ก็เหมือนกัน

46
00:04:46,214 --> 00:04:52,030
จะเท่ากับ FFFFFFFB ฐาน 16

47
00:04:52,030 --> 00:04:54,007
รวมทั้งหมดยาวกี่บิตครับ?

48
00:04:54,007 --> 00:05:00,000
ตรงนี้มี 8 หลัก

49
00:05:00,000 --> 00:05:01,951
เพราะฉนั้น หนึ่งหลัก

50
00:05:01,951 --> 00:05:05,282
มีฐานสองอยู่ 4 บิต

51
00:05:05,282 --> 00:05:09,359
F ตัวนี้มีค่า 1111

52
00:05:09,359 --> 00:05:18,268
รวมแล้วทั้งหมด 32 บิต (8ตัว x 4บิต)

53
00:05:18,268 --> 00:05:25,480
เพราะฉนั้น เลขฐานสองมันมีขนาดยาวมาก

54
00:05:25,480 --> 00:05:31,660
เลข 1 ทั้งหมด 32 บิต ล้นจอ

55
00:05:33,087 --> 00:05:35,752
เราเขียนย่อให้เป็น ฐาน16

56
00:05:35,752 --> 00:05:42,555
ก็จะเหลือแค่ FFFFFFFB (8ตัว)

57
00:05:42,555 --> 00:05:50,333
เล็กพวกนี้มันดูแปลกๆ แต่จริงๆมันคือเลขฐานสอง

58
00:05:50,333 --> 00:05:55,423
แปล...เห็นตัว F เมื่อไหร่ ให้แปลเป็น 1111

59
00:05:55,423 --> 00:06:02,631
เห็นตัว B เมื่อไหร่ ให้แปลเป็น 1011 (ฐานสอง)

60
00:06:02,869 --> 00:06:08,888
ถึงเวลาที่ผมจะอธิบายนิยาม... เพราะเรายกตัวอย่างของจริงมาให้ดู

61
00:06:08,888 --> 00:06:15,714
เราจะทำให้เป็นนิยามพื้นฐาน ที่ทุกคนจะได้เข้าใจตรงกัน

62
00:06:15,714 --> 00:06:21,416
ถ้าเราเห็นตัวเลขยาว n บิต

63
00:06:21,416 --> 00:06:26,483
แล้วเราตีความว่ามันเป็นเลขมีเครื่องหมาย ชนิด 2's Complement

64
00:06:26,483 --> 00:06:34,381
ผมก็เขียนอยู่ในรูป X(2,s)

65
00:06:34,381 --> 00:06:41,088
บิตที่ n-1 ทำหน้าที่เป็น Signed bit

66
00:06:50,864 --> 00:06:58,660
ที่เหลืออีก n-1 บิต ก็ทำหน้าที่เป็นข้อมูล

67
00:06:58,660 --> 00:07:04,653
แต่รวมแล้วทั้งหมด n bit มันคือเลขที่มีความหมาย

68
00:07:04,653 --> 00:07:07,032
เหมือนที่ผมอธิบายไป

69
00:07:07,342 --> 00:07:12,387
เดี๋ยวเราจะไปดูในตัวอย่างที่อยู่ถัดๆไป

70
00:07:12,387 --> 00:07:15,743
ว่าเราจะตีความเลขตรงนี้

71
00:07:15,743 --> 00:07:22,119
ให้เป็นเลขฐาน 10 มีเครื่องหมายได้อย่างไร

