การประกาศตัวแปร และขนาดความจุของตัวแปร char, short, int, long, float, double 
http://marcuscode.com/lang/csharp/variables-and-types

แปลงเลขฐานสิบ ให้เป็น เลขฐานสอง ชนิดมีเครื่องหมาย (2's Complement)
https://www.youtube.com/watch?v=mRvcGijXI9w&ab_channel=ComputerScience

บทความเรื่อง Signed-Magnitude, 1's Complement, 2's Complement
https://www.electronics-tutorials.ws/binary/signed-binary-numbers.html

เพิ่มเติมจากสไลด์นี้ มีหัวข้อที่น่าสนใจอยู่ 2 เรื่อง ดังนี้
     1. ขนาดและความจุของตัวแปร 
     2. การแปลงเลขฐานสิบ ให้เป็นเลขฐานสอง ชนิดมีเครื่องหมาย (2's Complement)

มาดูกันที่หัวข้อแรกคือ
1. ขนาดและความจุของตัวแปร
    โดยทั่วไปแล้ว การเก็บข้อมูลชนิดมีเครื่องหมาย (2's Complement) จะมีดังนี้
        ตัวอักขระ 1 ตัว (Character)
            char        8 บิต   หรือ 1 ไบต์
        เลขจำนวนเต็ม (Integer)
            short    16 บิต   หรือ 2 ไบต์
            int         32 บิต   หรือ 4 ไบต์
            long      64 บิต   หรือ 8 ไบต์
       (เลขทศนิยม float และ double จะเก็บในรูปแบบของ IEEE754)

       จะเห็นได้ว่า 8 บิต = 1 ไบต์ แสดงว่า มีค่าทั้งหมดคือ 2^8 หรือเท่ากับ 256 ค่า
       และมี range ตั้งแต่ -128 ถึง 127 (มาจาก -(2^7) ถึง (2^7)-1)
       ตัวอย่างการเก็บ เช่น char x = -5 ;
       แสดงว่า x = 0b1111 1011 (0b บอกถึงเลขฐานสอง)
             หรือ x = 0x       F        B (0x บอกถึงเลขฐานสิบหก)
             (F ฐานสิบหก = 1111 ฐานสอง  และ  B ฐานสิบหก = 1011 ฐานสอง)

2. การแปลงเลขฐานสิบ ให้เป็นเลขฐานสอง ชนิดมีเครื่องหมาย (2's Complement)
    โดยทั่วไปแล้ว จะมีขั้นตอนการแปลงอยู่ทั้งหมด 3 ขั้นตอน ดังนี้
    1. แปลงจากเลขฐานสิบ (ชนิดไม่มีเครื่องหมาย) เป็นเลขฐานสอง
    2. นำเลขมากลับบิต จาก 0->1 และ1->0 (1's Complement)
    3. นำเลขบิตที่กลับแล้วมา +1 ฐานสอง (2's Complement)

    ตัวอย่างเช่น short x = -5 ; (ขนาด 16 บิต)
    1. แปลงจากเลขฐานสิบ (ชนิดไม่มีเครื่องหมาย) เป็นเลขฐานสอง 
        เลขฐานสิบ (ไม่มีเครื่องหมาย) = 5 -> แปลงเป็น -> เลขฐานสอง = 0000 0000 0000 0101
    
    2. นำเลขมากลับบิต จาก 0->1 และ 1->0 (1's Complement)
       เลขฐานสอง = 0000 0000 0000 0101 -> แปลงเป็นเลขกลับบิตได้ -> 1111 1111 1111 1010

    3. นำเลขบิตที่กลับแล้วมา +1 ฐานสอง (2's Complement)
      เลขที่กลับบิต = 1111 1111 1111 1010 -> +1 ฐานสอง -> 1111 1111 1111 1011 

    จะได้ว่า short x = -5 มีค่าเท่ากับ
    0b 1111 1111 1111 1011 (ฐานสอง)
    0x       F        F        F        B (ฐานสิบหก)

    เท่านี้ ก็จะสามารถแปลงจากเลขฐานสิบ มาเป็นเลขฐานสอง ชนิดมีเครื่องหมาย (2's Complement) ได้แล้ว
    โดยสังเกตได้ว่า ถ้าหากยิ่งมีขนาดของตัวแปรที่มากขึ้นเท่าไหร่ เลข 1 จะยาวขึ้นเรื่อยๆ เกิดจากขั้นตอนของ 1's Complement นั้นเอง

    โดยข้อควรระวังคือ ห้ามใส่ค่าที่มากเกินกว่าขนาดของตัวแปรชนิดนั้นๆ
    เพราะจะทำให้เกิด Overflow ได้ (Error ที่เกิดจากการใส่ค่าที่มากเกินกว่าขนาดของตัวแปร หรือความจุที่รับได้)

    และวิธีการสังเกตว่าเป็นเลข + หรือ - สำหรับ 2's Complement ง่ายๆ ให้ดูที่เลขบิตด้านหน้า ของแต่ละ n bit (ความจุ)
    ถ้าบิตด้านหน้า เป็นเลข 0 เลขจะมีค่าเป็น + 
    ถ้าบิตด้านหน้า เป็นเลข 1 เลขจะมีค่าเป็น - 